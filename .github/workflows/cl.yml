name: 博客CICD
on:
  pull_request:
    # branches: main
  push:
    branches: main
    tags: version.*

jobs:
  push_docker_hub:
    runs-on: ubuntu-latest
    steps:
      # 拉取项目代码
      # 此处 actions/checkout 操作是从仓库拉取代码到Runner里的操作
      - name: 正在拉取仓库代码...
        uses: actions/checkout@v3
      - name: 正在登录远程dockerHub...
        run: |
          docker login -u ${{secrets.DOCKER_USERNAME }} -p ${{ secrets. DOCKER_PASSWORD }}
      - name: 正在构建image...
        run: |
          docker build -f ./Dockerfile -t ${{ vars.IMAGE_NAME }}:latest .
          docker tag ${{ vars.IMAGE_NAME }}:latest ${{secrets.DOCKER_USERNAME }}/${{vars.DOCKER_REPOSITORY }}:latest
      - name: 正在上传image...
        run: |
          docker push ${{secrets.DOCKER_USERNAME }}/${{vars.DOCKER_REPOSITORY }}:latest
          docker logout
  deploy_project:
    needs: push_docker_hub
    runs-on: ubuntu-latest
    steps:
      - name: 登录服务器, 执行脚本
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.REMOTE_HOST }}
          username: ${{ vars.REMOTE_USERNAME }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          # 执行脚本
          script: |
            sudo rm -f /etc/nginx/conf.d/harver_front_blog.conf
            sudo rm -rf /home/harver/nginx/harver_blog_https_ssl/
            echo -e "开始登录dockerHub..."
            docker login -u ${{secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            echo -e "开始清理旧容器..."
            docker kill ${{ vars.IMAGE_NAME }}
            docker rm -f ${{ vars.IMAGE_NAME }}
            docker rmi -f ${{secrets.DOCKER_USERNAME }}/${{vars.DOCKER_REPOSITORY }}:latest
            echo -e "开始拉取新镜像..."
            docker pull ${{secrets.DOCKER_USERNAME }}/${{vars.DOCKER_REPOSITORY }}:latest
            echo -e "开始创建并运行新容器..."
            docker run -d -p 1141:3000  --name ${{ vars.IMAGE_NAME }} ${{secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_REPOSITORY }}:latest
            echo -e "开始更新Nginx..."
            sudo docker cp ${{ vars.IMAGE_NAME }}:/app/blog_front/harver_front_blog.conf /etc/nginx/conf.d/
            echo -e "开始SSL..."
            sudo docker cp ${{ vars.IMAGE_NAME }}:/app/blog_front/ssl/ /home/harver/nginx/harver_blog_https_ssl/
            sudo nginx -s reload
            docker logout
