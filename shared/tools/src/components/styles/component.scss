@import './basic';
@mixin arrow($dir: 'left', $padding: 1.5) {
	$borderWidth: 0.1;
	$size: calc($padding + $borderWidth);

	&::before {
		@include shadow(true);

		display: block;
		position: absolute;
		z-index: 3;
		box-sizing: border-box;
		border: rem($borderWidth) solid; // 最外层颜色
		border-image: radial-gradient(col(primary, 1) 0%, col(sub) 90%) 30%;
		background: inherit; // 底色
		content: '';
	}
	@if $dir == 'left' {
		&::before {
			right: calc(rem(calc($size / -2)) + 0.5px);
			top: calc(50% - rem(calc($size / 2)));
			width: rem(calc($size));
			height: rem($size);
			clip-path: polygon(0% 0%, 0% 100%, 100% 100%);
			transform: rotate(-135deg);
		}
	} @else if $dir == 'top' {
		&::before {
			left: calc(50% - rem(calc($size / 2)));
			bottom: calc(rem(calc($size / -2)) + 0.5px);
			width: rem($size);
			height: rem(calc($size));
			clip-path: polygon(0% 0%, 0% 100%, 100% 100%);
			transform: rotate(-45deg);
		}
	} @else if $dir == 'right' {
		&::before {
			left: calc(rem(calc($size / -2)) + 0.5px);
			top: calc(50% - rem(calc($size / 2)));
			width: rem(calc($size));
			height: rem($size);
			clip-path: polygon(0% 0%, 0% 100%, 100% 100%);
			transform: rotate(45deg);
		}
	} @else if $dir == 'bottom' {
		&::before {
			left: calc(50% - rem(calc($size / 2)));
			top: calc(rem(calc($size / -2)) + 0.5px);
			width: rem($size);
			height: rem(calc($size));
			clip-path: polygon(0% 0%, 0% 100%, 100% 100%);
			transform: rotate(135deg);
		}
	}
}
@mixin card($padding: 0.5, $borderWidth: 0.25, $colorType: 'sub') {
	@include supper_border($colorType, $padding, $borderWidth) {
		@content;
	}
	@include shadow(true);

	transition: all 0.3s;
}
@mixin tag() {
	display: inline-flex;
	align-items: center;
	padding: rem(0.1) rem(0.2);
	border: 1px solid col(primary);
	background-color: col(bg-highlight);

	/* white-space: nowrap; // 不换行 合并多空格 换行符无效 */
	line-height: 1.3;
	font-size: rem(0.8);
	color: col(text-sub-color);
	margin-inline-end: rem(0.4);
	margin-block-end: rem(0.4);
	@include border_radius(0.2);
}
@mixin button($borderType: 'default', $padding: 0.5, $borderWidth: 0.25, $borderRadius: $borderWidth * 2) {
	@include supper_border($borderType, $padding, $borderWidth, $borderRadius);
	@include flex_center;
	@include shadow;
	@include pointer;
	@include text_hover;

	z-index: 67;
	margin: 0 0.3rem;
	border: none;
	line-height: initial;
	font-size: rem(0.8);
	transition: all 0.3s;
	@content;
}
@mixin divide($type: 'bottom') {
	@if $type == 'bottom' {
		border-bottom: 1px solid col(primary);
	}
	@if $type == 'top' {
		border-top: 1px solid col(primary);
	}
}
@mixin title($ellipsis: 1) {
	@include ellipsis($ellipsis);
	@include flex_start;

	width: 100%;
	font-family: 'Noto Serif SC', 'Segoe UI', SegoeUI, 'Microsoft YaHei', '微软雅黑', 'Helvetica Neue', Helvetica, Arial,
		sans-serif;
	font-size: rem(1.2);
	color: col(text-highlight);
	word-break: break-all;

	@content;
}
@mixin text() {
	line-height: 1.75;
	font-size: rem(0.8);
	word-break: break-all;
	letter-spacing: rem(0.1);
}
@mixin supper_border($colorType: 'default', $padding: 1, $borderWidth: 0.5, $borderRadius: $borderWidth * 2) {
	overflow: hidden;
	position: relative;
	z-index: 10;
	padding: rem($padding);
	border-radius: rem($borderRadius);
	@if $colorType == 'highlight' {
		&::after {
			position: absolute;
			left: 0;
			top: 0;
			z-index: 66;
			padding: rem($borderWidth);
			border: 1px solid col(primary);
			border-radius: rem($borderRadius);
			width: 100%;
			height: 100%;
			background: radial-gradient(col(primary, 1) 30%, col(sub, 0.3) 90%); // 底色
			mask: linear-gradient(#fff 0 100%) content-box, linear-gradient(#fff 0 100%);
			mask-composite: exclude;
			pointer-events: none;
			content: '';
			transition: all 0.3s;
		}
	} @else {
		background: col(box-bg); // 底色
	}
	@content;
}

// @deprecated
// @mixin deprecated_supper_rect_border($padding: 1, $borderRadius: 0.5, $borderWidth: $padding) {
// 	@include border_radius($borderRadius);
// 	@include shadow;
// 	@include grass;

// 	overflow: hidden;
// 	position: relative;
// 	z-index: 2;
// 	padding: rem($borderWidth);
// 	background-color: col(grey-0, 1);

// 	&::before {
// 		position: absolute;
// 		left: rem(0);
// 		top: rem(0);
// 		z-index: 2;
// 		border: rem($borderWidth) solid;
// 		border-image: radial-gradient(col(primary, 1) 0%, col(sub-2, 0.4) 90%) 30%;
// 		width: 100%;
// 		height: 100%;
// 		pointer-events: none;
// 		content: '';
// 	}

// 	&::after {
// 		position: absolute;
// 		left: rem(0);
// 		top: rem(0);
// 		z-index: 2;
// 		border: rem($borderWidth) solid;
// 		border-image: radial-gradient(col(sub-2, 1) 0%, col(primary, 0.4) 90%) 10%;
// 		width: 100%;
// 		height: 100%;
// 		pointer-events: none;
// 		content: '';
// 	}

// 	& > * {
// 		position: relative;
// 		z-index: 9;
// 		padding: rem($padding);
// 		background-color: col(grey-0, 1);
// 	}
// 	@content;
// }
